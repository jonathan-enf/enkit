diff --git a/foreign_cc/private/cmake_script.bzl b/foreign_cc/private/cmake_script.bzl
index 7645e61..29b33b0 100644
--- a/foreign_cc/private/cmake_script.bzl
+++ b/foreign_cc/private/cmake_script.bzl
@@ -199,6 +199,7 @@ _CMAKE_CACHE_ENTRIES_CROSSTOOL = {
     "CMAKE_EXE_LINKER_FLAGS": struct(value = "CMAKE_EXE_LINKER_FLAGS_INIT", replace = False),
     "CMAKE_RANLIB": struct(value = "CMAKE_RANLIB", replace = True),
     "CMAKE_SHARED_LINKER_FLAGS": struct(value = "CMAKE_SHARED_LINKER_FLAGS_INIT", replace = False),
+    "CMAKE_MODULE_LINKER_FLAGS": struct(value = "CMAKE_MODULE_LINKER_FLAGS_INIT", replace = False),
     "CMAKE_STATIC_LINKER_FLAGS": struct(value = "CMAKE_STATIC_LINKER_FLAGS_INIT", replace = False),
 }
 
@@ -354,6 +355,7 @@ def _fill_crossfile_from_toolchain(workspace_name, tools, flags):
     #        lines += [_set_list(ctx, "CMAKE_STATIC_LINKER_FLAGS_INIT", flags.cxx_linker_static)]
     if flags.cxx_linker_shared:
         dict["CMAKE_SHARED_LINKER_FLAGS_INIT"] = _join_flags_list(workspace_name, flags.cxx_linker_shared)
+        dict["CMAKE_MODULE_LINKER_FLAGS_INIT"] = _join_flags_list(workspace_name, flags.cxx_linker_shared)
     if flags.cxx_linker_executable:
         dict["CMAKE_EXE_LINKER_FLAGS_INIT"] = _join_flags_list(workspace_name, flags.cxx_linker_executable)
 
diff --git a/foreign_cc/private/framework.bzl b/foreign_cc/private/framework.bzl
index 892467e..f4269d7 100644
--- a/foreign_cc/private/framework.bzl
+++ b/foreign_cc/private/framework.bzl
@@ -1073,6 +1073,9 @@ def _expand_locations(ctx, expandable, data):
     else:
         fail("Unsupported type: {}".format(type(expandable)))
 
+# ENFABRICA PATCH: export these functions for our own rules
+expand_locations = _expand_locations
+
 def _expand_locations_in_string(ctx, expandable, data):
     # If `EXT_BUILD_ROOT` exists in the string, we assume the user has added it themselves
     if "EXT_BUILD_ROOT" in expandable:
